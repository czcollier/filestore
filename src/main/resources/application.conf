com.bullhorn.filestore {
  # base directory for filestore storage (db and files directories
  # will be created under here).
  store.basedir = "/home/ccollier/devel/filestore"
  # temp dir is not under base dir
  store.tempdir = "/home/ccollier/devel/filestore/temp"

  suspendingQueue.suspendThreshold = 2147483647 #1048576
  suspendingQueue.resumeThreshold = 32768
}
akka {
  loglevel = ERROR
  io.tcp.register-timeout = 60 s
  event-handlers = ["akka.event.slf4j.Slf4jLogger"]
}

# check the reference.conf in spray-can/src/main/resources for all defined settings
spray.can.server {
  # uncomment the next line for making this an HTTPS example
  # ssl-encryption = on
  idle-timeout = 240 s
  request-timeout = 120 s
  pipelining-limit = 20
  registration-timeout = 60 s
  chunkhandler-registration-timeout = 60 s
  request-chunk-aggregation-limit = 0

  parsing.max-content-length = 10g
  parsing.incoming-auto-chunking-threshold-size = 8192k

  automatic-back-pressure-handling = on

  back-pressure {
    noack-rate = 100
    reading-low-watermark = infinite
  }
}

io-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 8
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 3.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 200
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 4
}

single-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 1
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 1
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 1
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 1
}
